/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.24.v20191120
 * Generated at: 2020-10-11 18:40:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class response_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<script src=\n");
      out.write("\"https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js\">\n");
      out.write("  </script>\n");
      out.write("  <style>\n");
      out.write("      body {\n");
      out.write("          margin: 2%;\n");
      out.write("          font-size: 120%;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      th,\n");
      out.write("      td {\n");
      out.write("          padding: 20px;\n");
      out.write("      }\n");
      out.write("  </style>\n");
      out.write("    <head>\n");
      out.write("        <title>Hello Page</title>\n");
      out.write("    </head>\n");
      out.write("    <body ng-app=\"myApp\" ng-controller=\"ListController\">\n");
      out.write("        <h2>Hello, ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("!</h2>\n");
      out.write("\n");
      out.write("        <table border=1>\n");
      out.write("                <thead>\n");
      out.write("                    <tr>\n");
      out.write("                        <th>S.No</th>\n");
      out.write("                        <th>Name</th>\n");
      out.write("                        <th>Country</th>\n");
      out.write("                        <th>Grand Slams</th>\n");
      out.write("                        <th>Active</th>\n");
      out.write("                    </tr>\n");
      out.write("                </thead>\n");
      out.write("                <tr ng-repeat=\"item in itemsDetails\">\n");
      out.write("                    <td> {{item.sno}} </td>\n");
      out.write("                    <td> {{item.name}} </td>\n");
      out.write("                    <td> {{item.country}} </td>\n");
      out.write("                    <td> {{item.grandslams}} </td>\n");
      out.write("                    <td> {{item.active}} </td>\n");
      out.write("                </tr>\n");
      out.write("            </table>\n");
      out.write("    </body>\n");
      out.write("    <script>\n");
      out.write("        var app = angular.module('myApp', []);\n");
      out.write("        app.controller(\n");
      out.write("          'ListController', function($scope) {\n");
      out.write("\n");
      out.write("            $scope.itemsDetails = [{\n");
      out.write("                    sno: 1,\n");
      out.write("                    name: 'Roger Federer',\n");
      out.write("                    country: 'Switzerland',\n");
      out.write("                    grandslams: 20,\n");
      out.write("                    active: \"Yes\",\n");
      out.write("                }, {\n");
      out.write("                    sno: 2,\n");
      out.write("                    name: 'Rafael Nadal',\n");
      out.write("                    country: 'Spain',\n");
      out.write("                    grandslams: 18,\n");
      out.write("                    active: \"Yes\",\n");
      out.write("                }, {\n");
      out.write("                    sno: 3,\n");
      out.write("                    name: 'Novak Djokovic',\n");
      out.write("                    country: 'Serbia',\n");
      out.write("                    grandslams: 16,\n");
      out.write("                    active: \"Yes\",\n");
      out.write("                }, {\n");
      out.write("                    sno: 4,\n");
      out.write("                    name: 'Pete Samprass',\n");
      out.write("                    country: 'USA',\n");
      out.write("                    grandslams: 14,\n");
      out.write("                    active: \"No\",\n");
      out.write("                }, {\n");
      out.write("                    sno: 5,\n");
      out.write("                    name: 'Roy Emerson',\n");
      out.write("                    country: 'Australia',\n");
      out.write("                    grandslams: 12,\n");
      out.write("                    active: \"No\",\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            ];\n");
      out.write("\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
